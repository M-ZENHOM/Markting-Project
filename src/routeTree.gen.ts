/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const KnowledgeManagementLazyImport = createFileRoute('/knowledge-management')()
const DocumentManagementLazyImport = createFileRoute('/document-management')()
const BusinessManagementLazyImport = createFileRoute('/business-management')()
const AppsLazyImport = createFileRoute('/apps')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const KnowledgeManagementLazyRoute = KnowledgeManagementLazyImport.update({
  path: '/knowledge-management',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/knowledge-management.lazy').then((d) => d.Route),
)

const DocumentManagementLazyRoute = DocumentManagementLazyImport.update({
  path: '/document-management',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/document-management.lazy').then((d) => d.Route),
)

const BusinessManagementLazyRoute = BusinessManagementLazyImport.update({
  path: '/business-management',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/business-management.lazy').then((d) => d.Route),
)

const AppsLazyRoute = AppsLazyImport.update({
  path: '/apps',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/apps.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/apps': {
      id: '/apps'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AppsLazyImport
      parentRoute: typeof rootRoute
    }
    '/business-management': {
      id: '/business-management'
      path: '/business-management'
      fullPath: '/business-management'
      preLoaderRoute: typeof BusinessManagementLazyImport
      parentRoute: typeof rootRoute
    }
    '/document-management': {
      id: '/document-management'
      path: '/document-management'
      fullPath: '/document-management'
      preLoaderRoute: typeof DocumentManagementLazyImport
      parentRoute: typeof rootRoute
    }
    '/knowledge-management': {
      id: '/knowledge-management'
      path: '/knowledge-management'
      fullPath: '/knowledge-management'
      preLoaderRoute: typeof KnowledgeManagementLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AppsLazyRoute,
  BusinessManagementLazyRoute,
  DocumentManagementLazyRoute,
  KnowledgeManagementLazyRoute,
})

/* prettier-ignore-end */
